##MACROS##
[delayed_gcode welcome]
initial_duration: 5.
gcode:
  M117 Welcome Rodger
  
[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE AREA_START={params.AREA_START} AREA_END={params.AREA_END}
    #ADAPTIVE=1
    G0 X150 Y150 Z150 F6000
    BED_MESH_PROFILE save=default
# --------------------------------------------------------------
# level gantry
[gcode_macro G34]
gcode:
    Z_TILT_ADJUST
# --------------------------------------------------------------
# Park toolhead
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    PLAY_SINGLE_FEEDBACK_SOUND
    G91
    G1 Z{params.ZLIFT|default(10)|int} F3000
    G90
    G1 X{params.XPOS|default(15)|int} Y{params.YPOS|default(15)|int} F3000
    RESTORE_GCODE_STATE NAME=parking
# --------------------------------------------------------------
# load filament. Slow feed filament into the gear, fast load to cold zone then slow load to nozzle.
[gcode_macro M701]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    PLAY_SINGLE_FEEDBACK_SOUND
    M117 Loading File.
    M83
    G92 E0.0
    MIN_TEMP_CHECK
    G1 E{params.FEED_LENGTH|default(10)|int} F200    ; slow feed filament
    G1 E{params.FAST_LOAD_LENGTH|default(50)|int} F2000    ; Fast load to cold zone
    G1 E{params.SLOW_LOAD_LENGTH|default(50)|int} F100     ; Slow load to nozzle
    G92 E0.0
    PLAY_SINGLE_FEEDBACK_SOUND
    M117 Ready!!
    RESTORE_GCODE_STATE NAME=loading_filament
# --------------------------------------------------------------
# Unload filament. Extrude a small amount, quick pull then slow pull
[gcode_macro M702]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    PLAY_SINGLE_FEEDBACK_SOUND
    M117 Unloading File.
    MIN_TEMP_CHECK
    G91 ; set relative
    G1 E{params.FEED_LENGTH|default(10)|int} F100 
    G92 E0.0
    G1 E-{params.FAST_UNLOAD_LENGTH|default(70)|int} F2000  ; fast unload
    G92 E0.0
    G1 E-{params.SLOW_UNLOAD_LENGTH|default(40)|int} F1000  ; slow unload
    G92 E0.0
    PLAY_SINGLE_FEEDBACK_SOUND
    M117 Ready to Unload
    RESTORE_GCODE_STATE NAME=unloading_filament
# --------------------------------------------------------------
# filament change 
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    M117 Filament change!
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
# --------------------------------------------------------------
[gcode_macro M900]
gcode:
    SET_PRESSURE_ADVANCE ADVANCE={params.K|default(0)|float}
# --------------------------------------------------------------
[gcode_macro START_PRINT]
gcode:
    M117 Starting Print
    M300 S440 P200
    M300 S660 P250
    M300 S880 P300
    {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(0)|float %}
    #  # Start bed heating. Set and wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Pre-heat extruder to 160
    M104 S160
    # Set GCODE offset
    # Use absolute coordinates
        G90  ; use absolute coordinates
    # M83  ; extruder relative mode
    # Home the printer 
    G28 ; home all
    ## G29 ; calibrate bed mesh levelling
    # Set extruder temperature
    M104 S{EXTRUDER_TEMP}
    ## BED_MESH_CALIBRATE PROFILE=default METHOD=automatic
    BED_MESH_PROFILE LOAD=default
    # Move Z axis up a little to prevent scratching heat bed
    G1 Z2.0 F3000
    # Move to wait position 
    G1 X20 Y20 Z50 F4000.0  
    # Wait for Extruder temperature
    M109 S{EXTRUDER_TEMP}
    # Move Z axis up 
    G1 Z2.0 F3000 
    M117 Print 1 Line
    G1 X5.1 Y200.0 Z0.3 F1500.0 E15 ; Draw the first line
    G1 X5.4 Y200.0 Z0.3 F5000.0 ; Move to side a little
    M117 Print 2 Line
    G1 X5.4 Y25 Z0.3 F1500.0 E30 ; Draw the second line
    M117 Reset Extruder
    G92 E0 ; Reset Extruder
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X25 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish
    M117 End Start Print Macro
    
# --------------------------------------------------------------
[gcode_macro END_PRINT]
gcode:
    M117 Start End Macro
    {% set max_y = printer.toolhead.axis_maximum.y|float %}
    # Move nozzle away from print while retracting
    # M83 ; Relative E
    G91 ; Relative XYZ
    G1 X25 Y25 Z+5 E-3 F300
    G90 ; Absolute XYZ
    M82 ; Absolute E
    # Turn off bed, extruder, and fan
    M140 S0  ; turn off temperature
    M104 S0  ; turn off heatbed
    M106 S50 ; Leave fan running to protect cooling ducts.
    # Present print
    G1 X20 Y210 F3000 ; present print
    # Disable steppers
    M84
    # FunkyTown Tune 
    M300 S2093 P240 M300 S2093 P240 
    M300 S932 P240 M300 S2093 P240 
    M300 S0 P240 M300 S1567 P240 
    M300 S0 P240 M300 S1567 P240 
    M300 S2093 P240 M300 S2793 P240 
    M300 S2637 P240 M300 S2093 P240 
    M300 S0 P960 
    M117 End Print
# --------------------------------------------------------------
[gcode_macro clean_nozzle]
gcode:
  {% set wipe_count = 8 %}
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  G90
  G0 Z15 F300
  {% for wipe in range(wipe_count) %}
    {% for coordinate in [(220, 4),(235, 4)] %}
      G0 X{coordinate[0]} Y{coordinate[1] + 0.25 * wipe} Z9.7 F12000
    {% endfor %}
  {% endfor %}
  RESTORE_GCODE_STATE NAME=clean_nozzle_state
# --------------------------------------------------------------
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  M117 Pause Macro
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
# --------------------------------------------------------------
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  M117 Resume Print Macro
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
# --------------------------------------------------------------
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
     TURN_OFF_HEATERS
     CANCEL_PRINT_BASE
# --------------------------------------------------------------
[gcode_macro update_git]
gcode:
    {% set message = params.MESSAGE|default() %}
    {% if message %}
        RUN_SHELL_COMMAND CMD=update_git_script_message PARAMS="'{params.MESSAGE}'"
    {% else %}
        RUN_SHELL_COMMAND CMD=update_git_script
    {% endif %}

[gcode_shell_command update_git_script]
command: bash -c "bash $HOME/klipper-backup/script.sh"
timeout: 90.0
verbose: True

[gcode_shell_command update_git_script_message]
command: bash -c "bash $HOME/klipper-backup/script.sh $0"
timeout: 90.0
verbose: True
######################################################################
# Beeper
######################################################################

# M300 : Play tone. Beeper support, as commonly found on usual LCD
# displays (i.e. RepRapDiscount 2004 Smart Controller, RepRapDiscount
# 12864 Full Graphic). This defines a custom I/O pin and a custom
# GCODE macro.  Usage:
#   M300 [P<ms>] [S<Hz>]
#   P is the tone duration, S the tone frequency.
# The frequency won't be pitch perfect.

[pwm_cycle_time BEEPER_pin]
pin: EXP1_1
#   Beeper pin. This parameter must be provided.
#   ar37 is the default RAMPS/MKS pin.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=BEEPER_pin VALUE=0